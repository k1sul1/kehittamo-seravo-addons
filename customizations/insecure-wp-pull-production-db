#!/usr/bin/env ruby
##
# Pull database from production and Search-Replace with details from config.yml
##
require 'yaml'
require 'highline/import'

config_file = File.join('/data/wordpress','config.yml')

if File.exists?(config_file)
  config = YAML.load_file(config_file)
else
  puts "ERROR: config.yml was not found. Please provide the needed information for your box in config.yml."
  exit 1
end

if config['production'].nil?
  puts "ERROR: couldn't pull database because production isn't configured in config.yml"
  exit 2
end

# Gather variables for ssh/scp
port = config['production']['ssh_port'] || config['production']['port']
host = config['production']['domain'] || config['production']['host']
username = config['production']['user'] || config['name']

backupfile = "pre-production-pull-backup-#{Time.now.to_i}.sql"

puts "Saving backup of current development database in /data/db/pre-production-pull-backup.sql..."
system "wp db export #{backupfile}"

puts "Define new and old siteurl for later search-replacing..."
siteurl_development = `wp option get siteurl`.strip
siteurl_production = `ssh -o StrictHostKeyChecking=no -q #{username}@#{host} -p #{port} "wp option get siteurl"`.strip
# Flag varible with 'network' is local dev is a network install
site_network = `if $(wp core is-installed --network --skip-plugins); then echo network; fi`

puts "==> Production site URL: #{siteurl_production}"
puts "==> Development site URL: #{siteurl_development}"

if site_network.include? 'network'
  puts "==> This is a WordPress Network install."
else
  puts "==> This is a normal WordPress single install."
end

# Be a bit more robust and help users avoid unintelligent search-replaces
# exit unless HighLine.agree('Is the information above correct (yes/no)?')

puts "Pulling database from production with 'wp db export'..."
system "ssh -o StrictHostKeyChecking=no -q #{username}@#{host} -p #{port} 'wp db export - --single-transaction' " +
 "| pv -Wrbp " +
 "| wp db import -"

# Search Replace all but guid because guid is just a name for post
puts "Search-replacing #{siteurl_production} with #{siteurl_development}..."

if site_network == 'network'
  system "wp search-replace '#{siteurl_production}' '#{siteurl_development}' --skip-columns=guid --all-tables --network --url=#{siteurl_production}"
else
  system "wp search-replace '#{siteurl_production}' '#{siteurl_development}' --skip-columns=guid --all-tables"
end
